# Set this variable to find users that have not logged onto the domain for a set number of days
# Set this value to 0 to find ALL users in AD.
$age = "90"
 
# Set the output file location for the CSV generated by this script
$outputfile = "C:\Temp\UserLookup.csv"
 
# Generates a date based on today's date minus the number of days you selected
$agelimit = (get-date).adddays(-$age)
 
# Create a directory searcher object to begin searching for users in AD
# This method is used rather than Get-ADUser to retain compatibility with Server 2003 / 2008.
$userslookup = New-Object DirectoryServices.DirectorySearcher([ADSI]“”)
$userslookup.filter = “(&(objectClass=user)(objectCategory=person))”
 
# For each user found:
$userslookup.Findall().GetEnumerator() | ForEach-Object {
 
# Convert the user name to a string
$name = [string]$_.Properties.name
 
# Convert the ticker-style date gathered by the directory searcher for lastlogon into a readable date
$lastlogondate = [string]$_.Properties.lastlogontimestamp
$realtime = [DateTime]::FromFileTime($lastlogondate)
 
# If the last logon date is older than the age (in days) defined by $age:
    if ($agelimit -gt $realtime) {
 
    # Add the user to the $oldusers array
    $oldusers += @{"$name" = "$realtime"}
    }
}
 
# Export the results into a CSV
$oldusers.getEnumerator() | select name, value | export-csv $outputfile​
